name: .NET Core CI

on:
  push:
    branches: [ development, main]
  pull_request:
    branches: [ development, main]

jobs:
  build:
    env:
      JWT_SECRET: 1234567890
      RABBITUSER: "testRabbit"
      RABBITPW: "testRabbitPassword"
      RABBITURL: rabbitmq  # Use the service name here
      DB_SERVER: mssql,1433  # Use the service name here
      DB_BACKEND: test
      DB_USER: SA
      DB_PASSWORD: "YourNewPassword123"
      FRONTENDURL: ${{ secrets.FRONTENDURL }}
      GITHUB_ACTIONS: true
    
    runs-on: ubuntu-latest
    
    services:
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: --name rabbitmq --hostname rabbitmq
      
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "YourNewPassword123"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433  # Default SQL Server port
        options: >-
          --name=mssql
          --hostname=mssql

    steps:
      - uses: actions/checkout@v2

      - name: Wait for SQL Server to start
        run: |
          wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh mssql:1433 --timeout=30 -- echo "SQL Server is up"
        

      - name: Check SQL Server logs
        run: docker logs mssql
      
      
      - name: Test SQL Server connection
        run: |
          docker run --network container:mssql --rm mcr.microsoft.com/mssql-tools /opt/mssql-tools/bin/sqlcmd -S mssql,1433 -U SA -P hej -Q "SELECT 1"
          

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.203'  # Ensure this version matches your project requirements

 
      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal